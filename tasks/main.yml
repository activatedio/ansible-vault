---
# tasks file for ansible-activated-vault

- name: Create vault user
  user:
    name: "{{ vault_user }}"
    state: present
- name: Remove current swap from fstab
  lineinfile:
    dest: /etc/fstab
    regexp: '^/[\S]+\s+none\s+swap '
    state: absent
- name: Disable current swap
  command: swapoff --all
  ignore_errors: yes
  tags:
    -skip_ansible_lint
- name: Install unzip
  apt:
    name: unzip
    state: present
    update_cache: true
- name: Download vault
  unarchive:
    src: "https://releases.hashicorp.com/vault/{{ vault_version }}/vault_{{ vault_version }}_linux_amd64.zip"
    dest: /usr/local/sbin
    creates: "/usr/local/sbin/vault"
    owner: "{{ vault_user }}"
    group: "{{ vault_user }}"
    mode: 0500
    remote_src: True
  notify: Restart vault
- name: Enable mlock cap
  shell: "setcap cap_ipc_lock=+ep $(readlink -f $(which vault))"
  args:
    executable: /bin/bash
  tags:
    -skip_ansible_lint
- name: Create vault configuration directory
  file:
    path: /etc/vault
    state: directory
    owner: "{{ vault_user }}"
    group: "{{ vault_user }}"
    mode: 0700
- name: Create vault ssl keys
  include_role:
    name: activated-openssl
  vars:
    cert_ca_cert_src: "{{ vault_ca_cert_src }}"
    cert_ca_key_src: "{{ vault_ca_key_src }}"
    cert_ca_conf_src: "{{ vault_ca_conf_src }}"
    cert_ca_cert_name: "{{ vault_ca_cert_name }}"
    cert_extension_name: "{{ vault_cert_extension_name }}"
    cert_dest_directory: /etc/vault
    cert_name: vault
    cert_owner: "{{ vault_user }}"
    cert_group: "{{ vault_user }}"
  when: vault_generate_key
  notify: Restart vault
- name: Create composite key file
  shell: "cat /etc/vault/certs/vault.crt /usr/local/share/ca-certificates/{{ vault_ca_cert_name }}.crt > /etc/vault/certs/vault-composite.crt"
  when: vault_generate_key
  tags:
    - skip_ansible_lint
- name: Create vault consul client ssl keys
  include_role:
    name: activated-openssl
  vars:
    cert_ca_cert_src: "{{ vault_consul_client_ca_cert_src }}"
    cert_ca_key_src: "{{ vault_consul_client_ca_key_src }}"
    cert_ca_conf_src: "{{ vault_consul_client_ca_conf_src }}"
    cert_ca_cert_name: "{{ vault_consul_client_ca_cert_name }}"
    cert_extension_name: "{{ vault_consul_client_cert_extension_name }}"
    cert_dest_directory: /etc/vault
    cert_name: vault-consul-client
    cert_owner: "{{ vault_user }}"
    cert_group: "{{ vault_user }}"
  when: vault_consul_client_generate_key
  notify: Restart vault
- name: Create vault configuration
  template:
    src: config.hcl.j2
    dest: /etc/vault/config.hcl
    owner: "{{ vault_user }}"
    group: "{{ vault_user }}"
    mode: 0600
  notify: Restart vault
- name: Create systemd service file
  template:
    src: vault.service.j2
    dest: /lib/systemd/system/vault.service
    owner: root
    group: root
    mode: '0644'
  notify: Restart vault
- name: Run systemctl daemon-reload
  command: systemctl daemon-reload
  tags:
    -skip_ansible_lint
- name: Enable and start vault
  service:
    name: vault
    enabled: yes
    state: started
